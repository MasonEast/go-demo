package main

import (
	"fmt"
	"runtime"
)

/*
并发和并行：
并发：一个人在跑步，鞋带松了停下来系鞋带，然后继续跑步，这种是并发；
并行：一个人一边听音乐一边跑步；

进程、线程、协程：
进程：正在执行的程序，它是CPU资源分配和调度的独立单位（局限是创建，撤销和切换开销大）；
线程：一个进程可以包含多个线程，它是一个基本的CPU执行单元（优点是减小了程序并发执行的开销，缺点是没有自己的系统资源）；
协程：一种用户态的轻量级线程（优点是轻量级，执行效率高，因为子程序切换不是线程切换，没有线程切换的开销）；

不要以共享内存的方式去通信，而要以通信的方式去共享内存。
*/

func main () {
	fmt.Println(runtime.NumCPU())
	goSchedfn()
	syncFn()
	mutexFn()
	rwmutexFn()
}